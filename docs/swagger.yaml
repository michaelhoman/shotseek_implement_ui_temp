basePath: /v1
definitions:
  api.CreateCommentPayload:
    properties:
      content:
        maxLength: 1000
        type: string
    required:
    - content
    type: object
  api.CreatePostPayload:
    properties:
      content:
        maxLength: 1000
        type: string
      tags:
        items:
          type: string
        maxItems: 100
        type: array
      title:
        maxLength: 100
        type: string
    required:
    - content
    - title
    type: object
  api.UpdatePostPayload:
    properties:
      content:
        maxLength: 1000
        type: string
      tags:
        items:
          type: string
        maxItems: 100
        type: array
      title:
        maxLength: 100
        type: string
    type: object
  api.UpdateUserPayload:
    properties:
      city:
        type: string
      email:
        type: string
      first_name:
        description: Password  *string `json:"password" validate:"omitempty,min=6"`
        type: string
      last_name:
        type: string
      state:
        type: string
      zip_code:
        type: string
    type: object
  auth.LoginPayload:
    properties:
      email:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterUserPayload:
    properties:
      city:
        maxLength: 255
        type: string
      country:
        maxLength: 255
        type: string
      email:
        type: string
      first_name:
        maxLength: 255
        type: string
      last_name:
        maxLength: 255
        type: string
      latitude:
        maximum: 255
        type: number
      longitude:
        maximum: 255
        type: number
      password:
        maxLength: 72
        minLength: 8
        type: string
      state:
        maxLength: 255
        type: string
      street:
        maxLength: 255
        type: string
      zip_code:
        maxLength: 12
        type: string
    required:
    - city
    - country
    - email
    - first_name
    - last_name
    - password
    - state
    - zip_code
    type: object
  github_com_michaelhoman_ShotSeek_internal_store.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      post_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.User'
      user_id:
        type: integer
    type: object
  github_com_michaelhoman_ShotSeek_internal_store.Post:
    properties:
      comments:
        items:
          $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Comment'
        type: array
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      version:
        type: integer
    type: object
  github_com_michaelhoman_ShotSeek_internal_store.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      location:
        $ref: '#/definitions/store.Location'
      location_id:
        type: integer
      updated_at:
        type: string
      version:
        type: integer
    type: object
  store.Location:
    properties:
      city:
        type: string
      country:
        type: string
      country_code:
        type: string
      county:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      state:
        type: string
      street:
        type: string
      zip_code:
        type: string
    type: object
info:
  contact:
    email: homanstudio@proton.me
    name: API Support
    url: https://www.hintproductions.com
  description: This is the API for ShotSeek Cinematographer Finder
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ShotSeek API
paths:
  /authentication/activate/{token}:
    put:
      consumes:
      - application/json
      description: Activates a user by invitation token
      parameters:
      - description: Invitation token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User activated
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Activates a user
      tags:
      - users
  /authentication/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/auth.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: updated Login successful, JWT stored in cookie
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Login a user
      tags:
      - users
  /authentication/logout:
    post:
      description: Logout a user
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema: {}
      summary: Logout a user
      tags:
      - users
  /authentication/refresh:
    post:
      description: Refresh the JWT token
      produces:
      - application/json
      responses:
        "200":
          description: JWT refreshed successfully
          schema:
            type: string
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Refresh the JWT token via valid Refresh token
      tags:
      - users
  /authentication/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: User Registered
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.User'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Registers a new user
      tags:
      - users
  /locations/zip/{ZIPCode}:
    get:
      consumes:
      - application/json
      description: Lookup location by ZIP code
      parameters:
      - description: ZIP code
        in: path
        name: ZIPCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Location'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Lookup location by ZIP code
      tags:
      - locations
  /posts:
    post:
      consumes:
      - application/json
      description: Creates a new post from payload
      parameters:
      - description: Post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreatePostPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Post'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Creates a post
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Deletes a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Fetches a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Post'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Fetches a post
      tags:
      - posts
    patch:
      consumes:
      - application/json
      description: Updates an existing post from payload
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdatePostPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Post'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Updates a post
      tags:
      - posts
  /posts/{id}/comments:
    post:
      consumes:
      - application/json
      description: Creates a new comment from payload
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateCommentPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Comment'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Creates a comment
      tags:
      - comments
  /posts/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Deletes a comment
      tags:
      - comments
    get:
      consumes:
      - application/json
      description: Retrieves a comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Comment'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Retrieves a comment
      tags:
      - comments
    patch:
      consumes:
      - application/json
      description: Updates a comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateCommentPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.Comment'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Updates a comment
      tags:
      - comments
  /users/:
    get:
      consumes:
      - application/json
      description: Fetches the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Fetches the current user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Deletes a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Fetches a user by ID string/uuid
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Fetches a user by ID string/uuid
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Updates a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_michaelhoman_ShotSeek_internal_store.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Updates a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
